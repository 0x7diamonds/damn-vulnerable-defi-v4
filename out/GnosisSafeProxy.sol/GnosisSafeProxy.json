{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_singleton",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060405161017238038061017283398101604081905261002f916100b9565b6001600160a01b0381166100945760405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b03929092169190911790556100e9565b6000602082840312156100cb57600080fd5b81516001600160a01b03811681146100e257600080fd5b9392505050565b607b806100f76000396000f3fe6080604052600080546001600160a01b0316632cf35bc960e11b823501602757808252602082f35b3682833781823684845af490503d82833e806040573d82fd5b503d81f3fea26469706673582212204ab3bacf67233a2089aecc64ac5c474d98d608873089c5fe27ffd8885bd2249464736f6c63430008130033",
    "sourceMap": "512:1497:62:-:0;;;946:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;996:24:62;;988:71;;;;-1:-1:-1;;;988:71:62;;511:2:142;988:71:62;;;493:21:142;550:2;530:18;;;523:30;589:34;569:18;;;562:62;-1:-1:-1;;;640:18:142;;;633:32;682:19;;988:71:62;;;;;;;;1069:9;:22;;-1:-1:-1;;;;;;1069:22:62;-1:-1:-1;;;;;1069:22:62;;;;;;;;;;512:1497;;14:290:142;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:142;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:142:o;309:398::-;512:1497:62;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600080546001600160a01b0316632cf35bc960e11b823501602757808252602082f35b3682833781823684845af490503d82833e806040573d82fd5b503d81f3fea26469706673582212204ab3bacf67233a2089aecc64ac5c474d98d608873089c5fe27ffd8885bd2249464736f6c63430008130033",
    "sourceMap": "512:1497:62:-:0;;;1344:1;1338:8;;-1:-1:-1;;;;;1334:57:62;-1:-1:-1;;;1509:15:62;;1506:87;1503:176;;1622:10;1344:1;1612:21;1660:4;1344:1;1650:15;1503:176;1711:14;1344:1;;1692:34;1344:1;;1711:14;1344:1;1774:10;1767:5;1754:56;1739:71;;1844:16;1344:1;;1823:38;1880:7;1874:77;;1920:16;1344:1;1910:27;1874:77;;1974:16;1344:1;1964:27",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_singleton\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"author\":\"Stefan George - <stefan@gnosis.io>Richard Meissner - <richard@gnosis.io>\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor function sets address of singleton contract.\",\"params\":{\"_singleton\":\"Singleton address.\"}}},\"title\":\"GnosisSafeProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol\":\"GnosisSafeProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solady/=node_modules/solady/\",\":solmate/=node_modules/solmate/\"]},\"sources\":{\"node_modules/@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol\":{\"keccak256\":\"0x3bfdd453d9f896f7029d15bcafd11886957b320ad1764309d9f74fa059715249\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://5b5b7d0c8a900ba758e012236bf1c55e885fe5716aa79f6f693d22c31c85f7d5\",\"dweb:/ipfs/QmUq5oNsZY1b5pcYAzrY1i9oqyPUaiFhLaEWgB9ML6LrBj\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_singleton",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "details": "Constructor function sets address of singleton contract.",
            "params": {
              "_singleton": "Singleton address."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@gnosis.pm/=node_modules/@gnosis.pm/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":solady/=node_modules/solady/",
        ":solmate/=node_modules/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol": "GnosisSafeProxy"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol": {
        "keccak256": "0x3bfdd453d9f896f7029d15bcafd11886957b320ad1764309d9f74fa059715249",
        "urls": [
          "bzz-raw://5b5b7d0c8a900ba758e012236bf1c55e885fe5716aa79f6f693d22c31c85f7d5",
          "dweb:/ipfs/QmUq5oNsZY1b5pcYAzrY1i9oqyPUaiFhLaEWgB9ML6LrBj"
        ],
        "license": "LGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol",
    "id": 21899,
    "exportedSymbols": {
      "GnosisSafeProxy": [
        21898
      ],
      "IProxy": [
        21867
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:1968:62",
    "nodes": [
      {
        "id": 21860,
        "nodeType": "PragmaDirective",
        "src": "42:31:62",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 21867,
        "nodeType": "ContractDefinition",
        "src": "206:79:62",
        "nodes": [
          {
            "id": 21866,
            "nodeType": "FunctionDefinition",
            "src": "229:54:62",
            "nodes": [],
            "functionSelector": "a619486e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "masterCopy",
            "nameLocation": "238:10:62",
            "parameters": {
              "id": 21862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "248:2:62"
            },
            "returnParameters": {
              "id": 21865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21864,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21866,
                  "src": "274:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "274:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "273:9:62"
            },
            "scope": 21867,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IProxy",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 21861,
          "nodeType": "StructuredDocumentation",
          "src": "75:131:62",
          "text": "@title IProxy - Helper interface to access masterCopy of the Proxy on-chain\n @author Richard Meissner - <richard@gnosis.io>"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          21867
        ],
        "name": "IProxy",
        "nameLocation": "216:6:62",
        "scope": 21899,
        "usedErrors": []
      },
      {
        "id": 21898,
        "nodeType": "ContractDefinition",
        "src": "512:1497:62",
        "nodes": [
          {
            "id": 21870,
            "nodeType": "VariableDeclaration",
            "src": "798:26:62",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "singleton",
            "nameLocation": "815:9:62",
            "scope": 21898,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 21869,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "798:7:62",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21891,
            "nodeType": "FunctionDefinition",
            "src": "946:152:62",
            "nodes": [],
            "body": {
              "id": 21890,
              "nodeType": "Block",
              "src": "978:120:62",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 21877,
                          "name": "_singleton",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21873,
                          "src": "996:10:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 21880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1018:1:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 21879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1010:7:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21878,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1010:7:62",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 21881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1010:10:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "996:24:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642073696e676c65746f6e20616464726573732070726f7669646564",
                        "id": 21883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1022:36:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250",
                          "typeString": "literal_string \"Invalid singleton address provided\""
                        },
                        "value": "Invalid singleton address provided"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250",
                          "typeString": "literal_string \"Invalid singleton address provided\""
                        }
                      ],
                      "id": 21876,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "988:7:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "988:71:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21885,
                  "nodeType": "ExpressionStatement",
                  "src": "988:71:62"
                },
                {
                  "expression": {
                    "id": 21888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21886,
                      "name": "singleton",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21870,
                      "src": "1069:9:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21887,
                      "name": "_singleton",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21873,
                      "src": "1081:10:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1069:22:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 21889,
                  "nodeType": "ExpressionStatement",
                  "src": "1069:22:62"
                }
              ]
            },
            "documentation": {
              "id": 21871,
              "nodeType": "StructuredDocumentation",
              "src": "831:110:62",
              "text": "@dev Constructor function sets address of singleton contract.\n @param _singleton Singleton address."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 21874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21873,
                  "mutability": "mutable",
                  "name": "_singleton",
                  "nameLocation": "966:10:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 21891,
                  "src": "958:18:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21872,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "958:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "957:20:62"
            },
            "returnParameters": {
              "id": 21875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "978:0:62"
            },
            "scope": 21898,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21897,
            "nodeType": "FunctionDefinition",
            "src": "1199:808:62",
            "nodes": [],
            "body": {
              "id": 21896,
              "nodeType": "Block",
              "src": "1227:780:62",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1302:699:62",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1316:75:62",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1344:1:62",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "sload",
                                "nodeType": "YulIdentifier",
                                "src": "1338:5:62"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1338:8:62"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1348:42:62",
                              "type": "",
                              "value": "0xffffffffffffffffffffffffffffffffffffffff"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1334:3:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1334:57:62"
                        },
                        "variables": [
                          {
                            "name": "_singleton",
                            "nodeType": "YulTypedName",
                            "src": "1320:10:62",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1594:85:62",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1619:1:62",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "_singleton",
                                    "nodeType": "YulIdentifier",
                                    "src": "1622:10:62"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1612:6:62"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1612:21:62"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1612:21:62"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1657:1:62",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1660:4:62",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "return",
                                  "nodeType": "YulIdentifier",
                                  "src": "1650:6:62"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1650:15:62"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1650:15:62"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1522:1:62",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "1509:12:62"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1509:15:62"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1526:66:62",
                              "type": "",
                              "value": "0xa619486e00000000000000000000000000000000000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "1506:2:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1506:87:62"
                        },
                        "nodeType": "YulIf",
                        "src": "1503:176:62"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1705:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1708:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1711:12:62"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1711:14:62"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1692:12:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1692:34:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1692:34:62"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1739:71:62",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "1767:3:62"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1767:5:62"
                            },
                            {
                              "name": "_singleton",
                              "nodeType": "YulIdentifier",
                              "src": "1774:10:62"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1786:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1789:12:62"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1789:14:62"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1805:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1808:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "1754:12:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1754:56:62"
                        },
                        "variables": [
                          {
                            "name": "success",
                            "nodeType": "YulTypedName",
                            "src": "1743:7:62",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1838:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1841:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1844:14:62"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1844:16:62"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1823:14:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1823:38:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1823:38:62"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1892:59:62",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1917:1:62",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "1920:14:62"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1920:16:62"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1910:6:62"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1910:27:62"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1910:27:62"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "success",
                              "nodeType": "YulIdentifier",
                              "src": "1880:7:62"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1889:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "1877:2:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1877:14:62"
                        },
                        "nodeType": "YulIf",
                        "src": "1874:77:62"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1971:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1974:14:62"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1974:16:62"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "1964:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1964:27:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1964:27:62"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [],
                  "id": 21895,
                  "nodeType": "InlineAssembly",
                  "src": "1293:708:62"
                }
              ]
            },
            "documentation": {
              "id": 21892,
              "nodeType": "StructuredDocumentation",
              "src": "1104:90:62",
              "text": "@dev Fallback function forwards all transactions and returns all received return data."
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 21893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1207:2:62"
            },
            "returnParameters": {
              "id": 21894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1227:0:62"
            },
            "scope": 21898,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "GnosisSafeProxy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 21868,
          "nodeType": "StructuredDocumentation",
          "src": "287:225:62",
          "text": "@title GnosisSafeProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\n @author Stefan George - <stefan@gnosis.io>\n @author Richard Meissner - <richard@gnosis.io>"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          21898
        ],
        "name": "GnosisSafeProxy",
        "nameLocation": "521:15:62",
        "scope": 21899,
        "usedErrors": []
      }
    ],
    "license": "LGPL-3.0-only"
  },
  "id": 62
}